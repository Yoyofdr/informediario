#!/usr/bin/env python
"""
Script para probar los res√∫menes mejorados
"""
import os
from dotenv import load_dotenv
from alerts.scraper_diario_oficial import resumen_con_gemini

# Ejemplos de textos del Diario Oficial para probar
ejemplos = [
    {
        "titulo": "Llamado a Licitaci√≥n P√∫blica para la Concesi√≥n del Uso de las V√≠as",
        "texto": """La Municipalidad de Santiago convoca a licitaci√≥n p√∫blica para la concesi√≥n 
del uso de las v√≠as p√∫blicas en el sector centro de la comuna, espec√≠ficamente en las 
calles Ahumada, Hu√©rfanos y Estado. El per√≠odo de concesi√≥n ser√° de 5 a√±os a partir 
del 1 de agosto de 2025. Los interesados deber√°n presentar una garant√≠a de seriedad 
de la oferta por $50.000.000 (cincuenta millones de pesos). Las bases estar√°n 
disponibles desde el 15 de julio de 2025 en las oficinas municipales. El plazo para 
presentar ofertas vence el 31 de julio de 2025 a las 15:00 horas. Los oferentes 
deber√°n acreditar experiencia m√≠nima de 3 a√±os en administraci√≥n de espacios p√∫blicos 
y contar con capital de trabajo no inferior a $200.000.000."""
    },
    {
        "titulo": "Decreto que establece medidas de emergencia por d√©ficit h√≠drico",
        "texto": """Se declara emergencia h√≠drica en las comunas de Petorca, La Ligua y 
Cabildo de la Regi√≥n de Valpara√≠so, debido al d√©ficit de precipitaciones que alcanza 
un 70% bajo el promedio hist√≥rico. La medida regir√° desde el 15 de julio hasta el 
31 de diciembre de 2025. Se autoriza a la Direcci√≥n General de Aguas para adoptar 
medidas excepcionales como la redistribuci√≥n de caudales y restricci√≥n del uso del 
agua para riego en un 30%. Los agricultores afectados podr√°n postular a subsidios 
especiales por un monto total de $5.000.000.000. Las solicitudes se recibir√°n en 
las oficinas de INDAP entre el 20 de julio y el 20 de agosto de 2025."""
    },
    {
        "titulo": "Aprueba nuevo reglamento de transporte escolar",
        "texto": """Se aprueba el nuevo reglamento que establece requisitos adicionales para 
el transporte escolar en todo el territorio nacional. Los veh√≠culos deber√°n contar con 
cinturones de seguridad de tres puntos en todos los asientos, c√°maras de seguridad 
interiores y GPS con monitoreo en tiempo real. Los conductores deber√°n aprobar un 
curso especializado de 40 horas impartido por instituciones acreditadas. El plazo 
para adecuarse a la nueva normativa es de 6 meses a contar de la publicaci√≥n. Las 
multas por incumplimiento van desde 5 a 50 UTM. Se estima que la medida beneficiar√° 
a m√°s de 800.000 estudiantes que utilizan transporte escolar diariamente."""
    }
]

def probar_resumenes():
    """Prueba los res√∫menes con diferentes tipos de documentos"""
    load_dotenv()
    
    print("=== PROBANDO RES√öMENES MEJORADOS ===\n")
    
    for i, ejemplo in enumerate(ejemplos, 1):
        print(f"\n{'='*60}")
        print(f"EJEMPLO {i}: {ejemplo['titulo']}")
        print(f"{'='*60}")
        
        print(f"\nTEXTO ORIGINAL (primeras 200 palabras):")
        print(f"{ejemplo['texto'][:400]}...")
        
        # Generar resumen
        resumen = resumen_con_gemini(ejemplo['texto'], ejemplo['titulo'])
        
        print(f"\nRESUMEN GENERADO:")
        if resumen:
            print(resumen)
            
            # Verificar que incluye elementos clave
            print(f"\n‚úì VERIFICACI√ìN DE ELEMENTOS CLAVE:")
            elementos = {
                "Ubicaci√≥n": any(word in resumen.lower() for word in ["santiago", "petorca", "valpara√≠so", "comuna", "regi√≥n", "nacional"]),
                "Fechas": any(word in resumen.lower() for word in ["julio", "agosto", "diciembre", "2025", "plazo", "meses"]),
                "Montos": "$" in resumen or "pesos" in resumen.lower() or "utm" in resumen.lower(),
                "Requisitos": any(word in resumen.lower() for word in ["requisito", "experiencia", "acreditar", "deber√°n", "curso"]),
                "Entidades": any(word in resumen.lower() for word in ["municipalidad", "indap", "direcci√≥n general"]),
            }
            
            for elemento, presente in elementos.items():
                estado = "‚úÖ" if presente else "‚ùå"
                print(f"  {estado} {elemento}")
            
            # Contar caracteres
            print(f"\nüìè Longitud del resumen: {len(resumen)} caracteres")
        else:
            print("‚ùå No se pudo generar resumen")
    
    print(f"\n{'='*60}")
    print("PRUEBA COMPLETADA")
    print(f"{'='*60}")

if __name__ == "__main__":
    probar_resumenes()